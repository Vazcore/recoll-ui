import type { NextPage } from 'next'
import Head from 'next/head'
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import styles from '../styles/Home.module.css'
import { FormControlLabel, Radio, RadioGroup, TextField, Typography } from '@mui/material';
import React, { ChangeEvent, useCallback, useState } from 'react';
import ResultFile from './models/result-file';
import ResultItem from './components/result-item';
import { SearchDataResponse } from './api/search';
import { Types } from './types';

const Home: NextPage = () => {
  const [type, setType] = useState(Types.ALL);
  const [query, setQuery] = useState("");
  const [resultList, setResultList] = useState<Array<ResultFile>>([]);
  const onSearch = useCallback(async () => {
    const response = await fetch(`/api/search?q=${encodeURIComponent(query)}&t=${type}`);
    const data = await response.json() as SearchDataResponse;
    setResultList(data.items.map(item => new ResultFile(item)));
  }, [type, query]);

  const onTypeChange = (event: ChangeEvent<HTMLInputElement>) => {
    setType(event.target.value as Types);
  };

  const onQueryChanged = (event: ChangeEvent<HTMLInputElement>) => {
    setQuery(event.target.value);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to Publish Library
        </h1>
        <div style={{display: "flex"}} className={styles.m_top_20}>
          <div style={{marginRight: "50px"}}>
            <TextField id="outlined-basic"
              style={{minWidth: "400px"}}
              onChange={onQueryChanged}
              label="Search Query" variant="outlined" />

            <RadioGroup
              aria-labelledby="demo-radio-buttons-group-label"
              defaultValue={Types.ALL}
              className={styles.m_top_20}
              onChange={onTypeChange}
              name="radio-buttons-group"
            >
              <FormControlLabel value={Types.ALL} control={<Radio />} label="All" />
              <FormControlLabel value={Types.BY_FILE} control={<Radio />} label="By FileName" />
            </RadioGroup>

            <Stack spacing={2} direction="row" className={styles.m_top_20}>
              <Button variant="contained" onClick={onSearch}>Search</Button>
            </Stack>
          </div>
          <div>
            {resultList.length > 0 && <div>
              <Typography sx={{ fontSize: 18 }} color="text.secondary" gutterBottom>
                We found: {resultList.length} item(s)
              </Typography>
              {resultList.map((item) => <ResultItem key={item.path} item={item} />)}
            </div>}
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="#"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by Oleksii Habrusiev
        </a>
      </footer>
    </div>
  )
}

export default Home
